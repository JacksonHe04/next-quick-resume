{
  "header": {
    "name": "何锦诚",
    "contact": {
      "phone": "17712862516",
      "email": "jacksonhe04@qq.com",
      "wechat": "FRONTENDYUANFANG",
      "age": "20",
      "github": {
        "text": "github.com/JacksonHe04",
        "url": "https://github.com/JacksonHe04"
      },
      "homepage": {
        "text": "jacksonhe.notion.site",
        "url": "https://jacksonhe.notion.site"
      }
    },
    "jobInfo": {
      "position": "前端开发工程师（实习）",
      "duration": "6个月及以上",
      "availability": "大陆境内立即到岗"
    }
  },
  "about": {
    "title": "关于我",
    "content": "我是东南大学信使计划工作室的核心开发者，具备与工作室成员进行团队开发的丰富经验，曾承接过多个校内外开发项目。此外，我曾为校内著名实验室全栈开发并上线了研究生招生管理系统。在开源贡献方面，我为开源浏览器插件仓库成功提交过新功能开发的 PR。我时刻关注前端技术最新发展和 AI 领域最新动态，在提示词工程、大模型微调、Agent、MCP 等方面均有实践经验。我坚定地选择前端开发方向，对互联网行业与技术充满热爱。"
  },
  "education": {
    "title": "教育经历",
    "school": "东南大学（985）",
    "period": "2022-09 ~ 2026-06",
    "details": "计算机科学与工程学院 ｜ 人工智能 ｜ 本科"
  },
  "skills": {
    "title": "专业技能",
    "items": [
      "熟悉常见的 <b>HTML</b> 及 <b>HTML5</b> 元素，<b>CSS</b>/<b>CSS3</b> 的基本语法与布局。",
      "熟悉 <b>JavaScript</b> 及 <b>ES6</b> 语法特性，了解 <b>TypeScript</b>，了解常用设计模式。",
      "熟悉 <b>React</b> 框架，能够熟练使用 <b>React</b> 配合主流组件库进行开发，了解 <b>Vue3</b> 框架。",
      "了解 <b>HTTP/HTTPS</b> 协议、<b>TCP</b> / <b>IP</b> 等计算机网络知识，理解浏览器原理与工作方式。",
      "掌握 <b>Vite</b>、<b>Webpack</b> 等前端工程化工具的使用。",
      "熟悉 <b>Git</b> 的使用，具备全栈开发经验。"
    ]
  },
  "projects": {
    "title": "项目经历",
    "items": [
      {
        "name": "QuAIz 基于生成式大模型的试卷生成与批改系统",
        "github": "https://github.com/JacksonHe04/QuAIz",
        "demo": "https://quaiz-ai.vercel.app",
        "techStack": "React 19 + TypeScript + Vite + Zustand + TailwindCSS",
        "description": "大模型驱动的在线智能试卷生成与批改系统，实现 6 种题型（单选、多选、填空、简答、代码输出、代码编写）组合的从智能试卷生成、在线答题到自动批改的完整闭环，集成多种大模型 API，实现了流式组件渲染和虚拟化性能优化。",
        "features": [
          "实现对 SSE 式输出的同步 JSON 解析，对题目组件进行流式实时渲染，显著减少渲染等待时间。",
          "基于 react-window 实现虚拟化渲染技术，解决日志面板的滚动白屏问题，支持 10000+ 日志组件无卡顿显示。",
          "使用 React.memo + 自定义比较函数减少不必要重渲染，通过 useMemo/useCallback 减少缓存优化计算时间。",
          "基于 React.forwardRef，实现将 ref 转发到内部的 List 组件的虚拟化日志列表高阶组件。",
          "开发表单状态管理、提交逻辑钩子等自定义 Hooks，封装业务逻辑，结合 Zustand 优化状态管理。",
          "设计统一工具链，集成 ESLint + Prettier + CommitLint 规范，改善代码规范性。"
        ],
        "show": true
      },
      {
        "name": "Flow Flat 节点流程图平台",
        "github": "https://github.com/JacksonHe04/flow-flat",
        "demo": "https://flow-flat.vercel.app",
        "techStack": "React + Vite + TypeScript + Zustand",
        "description": "一个基于 React Flow 的可视化节点流程图平台，支持富文本编辑和代码编辑功能。",
        "features": [
          "项目采用 Monorepo 架构，集成了自研的节点组件 npm 包和基于该组件库的 Web 应用平台。",
          "Web 应用是一个节点流程图平台，将 TipTap 富文本编辑器和 Monaco 代码编辑器集成到基于 React Flow 的自研节点组件中。",
          "基于 React Flow 自研 custom-react-flow-node 包，提供可定制内容与类型的 React Flow 节点，已发布 npm 包并提供文档和 API。",
          "平台使用 Zustand 替代 Redux 实现轻量级状态管理，结合 immer 中间件简化状态更新操作，模块化设计白板、节点和存储状态管理。",
          "项目采用 Vite 作为 Web 应用的构建工具，使用 Rollup 作为自研节点组件库的构建工具。"
        ],
        "show": false
      },
      {
        "name": "LIKEN 大模型对话系统",
        "github": "https://github.com/JacksonHe04/liken",
        "demo": "https://liken.vercel.app",
        "techStack": "Next.js + React + TypeScript + Shad/cn UI",
        "description": "基于 Next.js 构建的智能对话系统，集成大模型 API 实现流式对话体验。",
        "features": [
          "基于 Next.js 14 的 App Router 实现了服务端渲染(SSR)，采用 Next.js API Routes 构建后端接口。",
          "基于 React Context 进行全局会话状态管理，实现新建会话自动在侧栏更新会话列表。",
          "使用 IndexedDB 实现浏览器本地消息持久化，并支持对话历史记录管理。",
          "使用 React Markdown 实时渲染回答结果，支持代码高亮显示和复制功能。",
          "基于 SSE 实现流式对话响应，集成火山方舟大模型 API 与 OpenAI SDK 构建实时智能对话功能。"
        ],
        "show": false
      },
      {
        "name": "东南大学 PALM 实验室研究生招生系统",
        "github": "https://github.com/JacksonHe04/palm-ams",
        "demo": "",
        "techStack": "Vue 3 + TypeScript + Vite + Pinia + Element Plus UI + Django + MySQL",
        "description": "为东南大学 PALM 实验室开发的研究生招生管理系统，提供完整的招生流程管理功能。",
        "features": [
          "基于 Vue Router 实现前端路由系统，通过全局导航守卫实现后台管理权限控制，并结合动态导入实现路由组件的按需加载。",
          "对 Axios 进行二次封装，集成请求拦截器、自动注入 Token、统一错误处理及 ElMessage 提示。",
          "使用 Tailwind CSS 进行原子化 CSS 开发，实现多屏响应式布局，并通过 SCSS 预处理器定制主题。",
          "在系统迭代中，用 TypeScript 替换 JavaScript，增强代码健壮性与可维护性。",
          "利用 Pinia 进行全局状态管理，集中管理数据并实现响应式更新。",
          "设计统一工具链，集成 ESLint + Prettier + CommitLint 规范，改善代码规范性。",
          "使用 ECharts 实现招生数据多维度可视化展示，使用 XLSX.js 处理招生系统表格导入导出功能。",
          "以 Vite 为构建工具，配置模块化开发环境，通过 Rollup 实现精细化的静态资源分包策略。"
        ],
        "show": false
      },
      {
        "name": "Find Yourself 基于 Vue 3 的宇宙 3D 游戏",
        "github": "https://github.com/JacksonHe04/find-yourself",
        "demo": "https://find-yourself.vercel.app",
        "techStack": "Vue 3 + Three.js + TypeScript + Vite",
        "description": "",
        "features": [
          "使用 Three.js 创建逼真的宇宙环境，包括星空背景、行星系统、光照效果和粒子系统。",
          "实现第一人称视角控制系统，支持鼠标和键盘操作，提供流畅的 3D 空间导航体验。",
          "集成物理引擎，实现碰撞检测、重力模拟和物体交互，增强游戏的真实感。",
          "优化渲染性能，实现 LOD 技术和视锥体剔除，确保流畅的游戏体验。"
        ],
        "show": false
      },
      {
        "name": "Mini React By TypeScript",
        "github": "https://github.com/JacksonHe04/mini-react-by-ts",
        "demo": "https://mini-react-by-ts.vercel.app",
        "techStack": "TypeScript + Webpack + Jest",
        "description": "",
        "features": [
          "使用 TypeScript 从零实现 React 的核心功能，包括虚拟 DOM、组件系统、状态管理和生命周期。",
          "实现 Fiber 架构的简化版本，构建完整的 Diff 算法，实现高效的虚拟 DOM 比较和更新。",
          "实现 Hooks 系统，包括 useState、useEffect、useContext 等常用 Hooks 的核心逻辑。",
          "设计组件生命周期管理系统，支持组件的挂载、更新和卸载过程。",
          "使用 Jest 编写完整的单元测试，确保各个模块功能的正确性和稳定性。",
          "通过 Webpack 配置构建系统，支持 TypeScript 编译和模块打包。"
        ],
        "show": false
      }
    ]
  }
}