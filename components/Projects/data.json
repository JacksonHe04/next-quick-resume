{
  "title": "项目经历",
  "items": [
    {
      "name": "Flow Flat 集成开发平台",
      "github": "https://github.com/JacksonHe04/flow-flat",
      "demo": "https://flow-flat.vercel.app",
      "techStack": "React + Vite + TypeScript + Zustand",
      "features": [
        "整合了节点流程图、富文本编辑器、代码编辑器三大核心功能模块的集成开发平台。",
        "使用 Zustand 进行轻量级状态管理，实现跨组件的数据共享和响应式更新。",
        "集成 React Flow 实现可视化节点流程图编辑器，支持拖拽、连线、节点配置等交互功能。",
        "内置富文本编辑器，支持 Markdown 语法、实时预览、格式化等功能。",
        "集成 Monaco Editor 代码编辑器，提供语法高亮、代码补全、错误提示等开发体验。"
      ]
    },
    {
      "name": "Find Yourself 基于 Vue 3 的宇宙 3D 游戏",
      "github": "https://github.com/JacksonHe04/find-yourself",
      "demo": "https://find-yourself.vercel.app",
      "techStack": "Vue 3 + Three.js + TypeScript + Vite",
      "features": [
        "使用 Three.js 创建逼真的宇宙环境，包括星空背景、行星系统、光照效果和粒子系统。",
        "实现第一人称视角控制系统，支持鼠标和键盘操作，提供流畅的 3D 空间导航体验。",
        "集成物理引擎，实现碰撞检测、重力模拟和物体交互，增强游戏的真实感。",
        "优化渲染性能，实现 LOD 技术和视锥体剔除，确保流畅的游戏体验。"
      ]
    },
    {
      "name": "Mini React By TypeScript",
      "github": "https://github.com/JacksonHe04/mini-react-by-ts",
      "demo": "https://mini-react-by-ts.vercel.app",
      "techStack": "TypeScript + Webpack + Jest",
      "features": [
        "使用 TypeScript 从零实现 React 的核心功能，包括虚拟 DOM、组件系统、状态管理和生命周期。",
        "实现 Fiber 架构的简化版本，构建完整的 Diff 算法，实现高效的虚拟 DOM 比较和更新。",
        "实现 Hooks 系统，包括 useState、useEffect、useContext 等常用 Hooks 的核心逻辑。",
        "设计组件生命周期管理系统，支持组件的挂载、更新和卸载过程。",
        "使用 Jest 编写完整的单元测试，确保各个模块功能的正确性和稳定性。",
        "通过 Webpack 配置构建系统，支持 TypeScript 编译和模块打包。"
      ]
    }
  ]
}